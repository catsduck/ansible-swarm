---

- name: create datasource config
  community.docker.docker_config:
    name: grafana_datasources.yml
    data:  "{{ lookup('file', 'grafana_datasources.yml') }}"
    state: present

- name: create dashboard config
  community.docker.docker_config:
    name: grafana_dashboards.yml
    data:  "{{ lookup('file', 'grafana_dashboards.yml') }}"
    state: present

- name: create dashboard definition configs
  community.docker.docker_config:
    name: "{{ item }}"
    data:  "{{ lookup('file', item) | b64encode }}"
    data_is_b64: true
    state: present
  loop:
    - grafana_dashboard_node_exporter_full.json
    - grafana_dashboard_swarm_services.json 
    - grafana_dashboard_swarm_nodes.json 

- name: Deploy grafana service
  community.docker.docker_swarm_service:
    name: grafana
    image: grafana/grafana-oss
    networks:
      - traefik-public
      - swarm-internal
    configs:
      - config_name: grafana_datasources.yml
        filename: /etc/grafana/provisioning/datasources/grafana_datasources.yml
      - config_name: grafana_dashboards.yml
        filename: /etc/grafana/provisioning/dashboards/grafana_datasources.yml
      - config_name: grafana_dashboard_swarm_nodes.json
        filename: /etc/grafana/dashboards/grafana_dashboard_swarm_nodes.json
      - config_name: grafana_dashboard_swarm_services.json
        filename: /etc/grafana/dashboards/grafana_dashboard_swarm_services.json
      - config_name: grafana_dashboard_node_exporter_full.json
        filename: /etc/grafana/dashboards/grafana_dashboard_node_exporter_full.json
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.rule: "Host(`grafana.{{ traefik_domain }}`)"
      traefik.http.routers.grafana.entrypoints: "httpsecure"
      traefik.http.routers.grafana.service: "grafana"
      traefik.http.routers.grafana.tls.certresolver: "certs"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
